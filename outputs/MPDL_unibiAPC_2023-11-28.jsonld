{
  "@context": {
    "schema": "http://schema.org/",
    "bs": "https://bioschemas.org/terms/",
    "codemeta": "https://w3id.org/codemeta/",
    "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "maSMP:": "https://discovery.biothings.io/view/maSMP/",
    "@dateModified": "2023-11-30"
  },
  "@graph": [
    {
      "@id": "schema:programmingLanguage",
      "@type": "rdf:Property",
      "rdfs:comment": "The computer programming language.",
      "rdfs:label": "programmingLabel",
      "text": "Python"
    },
    {
      "@id": "schema:version",
      "@type": "rdf:Property",
      "rdfs:comment": "The version of the CreativeWork embodied by a specified resource.",
      "rdfs:label": "version"
    },
    {
      "@id": "schema:citation",
      "@type": "rdf:Property",
      "rdfs:comment": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc. Values expected to be one of these types.",
      "rdfs:label": "citation",
      "text": "When citing this dataset, please indicate the [release](https://github.com/OpenAPC/openapc-de/releases/) you are referring to. The releases also contain information on contributors relating to the respective release.\n\nPlease do not cite the master branch of the Github repository (https://github.com/OpenAPC/openapc-de/tree/master/), but use the release numbers/tags.\n\nBielefeld University Library archives a copy (including commit history). To cite:\n\n{Contributors:} *Datasets on fee-based Open Access publishing across German Institutions*. Bielefeld University. [10.4119/UNIBI/UB.2014.18](http://dx.doi.org/10.4119/UNIBI/UB.2014.18)\n"
    },
    {
      "@id": "schema:contributor",
      "@type": "rdf:Property",
      "rdfs:comment": "Contributors.",
      "rdfs:label": "contributor",
      "text": "Jens Harald Aasheim, Benjamin Ahlborn, Chelsea Ambler, Magdalena Andrae, Jochen Apel, Hans-Georg Becker, Roland Bertelmann, Daniel Beucke, Peter Blume, Ute Blumtritt, Sabine Boccalini, Kim Braun, Christoph Broschinski, Dorothea Busjahn, Pablo de Castro, Roberto Cozatl, Amanda Cullin, Patrick Danowski, Gernot Deinzer, Julia Dickel, Andrea Dorner, Stefan Dr\u00f6\u00dfler, Karin Eckert, Carsten Elsner, Clemens Engelhardt, Inken Feldsien-Sudhaus, Fabian Franke, Claudia Frick, Paola Galimberti, Agnes Gei\u00dfelmann, Kai Karin Geschuhn, Steffi Grimm, Christian Gutknecht, Uli Hahn, Kristina Hanig, Dominik Hell, Ulrich Herb, Stephanie Herzog, Ute Holzwarth, Christie Hurrell, Doris Jaeger, Najko Jahn, Alexandra Jobmann, Andreas Kennecke, Robert Kiley, Ilka Kleinod, Lydia Koglin, Gerrit Kuehle, Ignasi Labastida i Juan, Gerald Langhanke, Stuart Lawson, Kathrin Lucht-Roussel, Jan L\u00fcth, Frank L\u00fctzenkirchen, Anna Marini, Anja Oberl\u00e4nder, Jere Odell, Vitali Peil, Dirk Pieper, Tobias Pohlmann, Thomas Porquet, Markus Putnings, Annette Scheiner, Michael Schlachter, Birgit Schlegel, Stefanie Seeh, Adriana Sikora, Susanne Stemmler, Matti St\u00f6hr, Eva Stopkov\u00e1, Andr\u00e9e Rathemacher, Edith Reschke, Katharina Rieck, Florian Ruckelshausen, Ilka Rudolf, Marco Tullney, Astrid Vieler, Viola Vo\u00df, Marco Winkler, Sabine Witt, Philip Young\n"
    },
    {
      "@id": "schema:description",
      "@type": "rdf:Property",
      "rdfs:comment": "A description of the item..",
      "rdfs:label": "description",
      "text": "Collect and disseminate information on fee-based Open Access publishing"
    },
    {
      "@id": "schema:identifier",
      "@type": "rdf:Property",
      "rdfs:comment": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
      "rdfs:label": "identifier"
    },
    {
      "@id": "schema:keywords",
      "@type": "rdf:Property",
      "rdfs:comment": "Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.",
      "rdfs:label": "keywords",
      "text": ""
    },
    {
      "@id": "schema:license",
      "@type": "rdf:Property",
      "rdfs:comment": "license",
      "rdfs:label": "license",
      "url": "The MIT License (MIT)\n\nCopyright (c) 2016-2018 Christoph Broschinski\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
    },
    {
      "@id": "schema:maintainer",
      "@type": "rdf:Property",
      "rdfs:comment": "maintainer",
      "rdfs:label": "maintainer",
      "text": "For bugs, feature requests and other issues, please submit an issue via [Github](https://github.com/OpenAPC/openapc-de/issues/new).\n\nFor general comments, email openapc at uni-bielefeld.de\n"
    },
    {
      "@id": "schema:name",
      "@type": "rdf:Property",
      "rdfs:comment": "The name of the item.",
      "rdfs:label": "name",
      "text": "unibiAPC"
    },
    {
      "@id": "codemata:referencePublication",
      "@type": "rdf:Property",
      "rdfs:comment": "An academic publication related to the software.",
      "rdfs:label": "referencePublication"
    },
    {
      "@id": "schema:installURL",
      "@type": "rdf:Property",
      "rdfs:comment": "URL at which the app may be installed, if different from the URL of the item.",
      "rdfs:label": "installURL",
      "url": "https://github.com/MPDL/unibiAPC/releases"
    },
    {
      "@id": "bs:input",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "bs:FormalParameter"
      },
      "rdfs:comment": "An input required to use the computational workflow (eg. Excel spreadsheet, BAM file).",
      "rdfs:label": "input"
    },
    {
      "@id": "bs:output",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "bs:FormalParameter"
      },
      "rdfs:comment": "An output produced by the computational workflow (or software).",
      "rdfs:label": "output"
    },
    {
      "@id": "codemeta:readme",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:URL"
      },
      "rdfs:comment": "Link to this software Readme file. Property defined in the [Codemeta terms](https://codemeta.github.io/terms/).",
      "rdfs:label": "readme"
    },
    {
      "@id": "schema:operatingSystem",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareRunAction"
      },
      "schema:rangeIncludes": {
        "@id": "schema:Text"
      },
      "rdfs:comment": "If the running was done by a direct execution (rather than via a container), indicate the operating system.",
      "rdfs:label": "operatingSystem"
    },
    {
      "@id": "schema:processorRequirements",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareRunAction"
      },
      "schema:rangeIncludes": {
        "@id": "schema:Text"
      },
      "rdfs:comment": "If the running was done by a direct execution (rather than via a container), indicate the processor specification.",
      "rdfs:label": "processorRequirements"
    },
    {
      "@id": "schema:runtimePlatform",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareRunAction"
      },
      "schema:rangeIncludes": {
        "@id": "schema:Text"
      },
      "rdfs:comment": "If the running was done by a direct execution (rather than via a container), indicate the runtime platform.",
      "rdfs:label": "runtimePlatform"
    },
    {
      "@id": "maSMP:SoftwareApplication",
      "@type": "rdfs:Class",
      "rdfs:comment": "Extension of schema:SoftwareApplication adding properties corresponding to the Software Management Plan use case. For more information on SMPs see [ELIXIR Software Management Plan for Life Sciences](https://doi.org/10.37044/osf.io/k8znb). Properties have also been [mapped via crosswalks to other SMPs](https://doi.org/10.5281/zenodo.8087357). ",
      "rdfs:label": "SoftwareApplication",
      "rdfs:subClassOf": {
        "@id": "schema:SoftwareApplication"
      }
    },
    {
      "@id": "maSMP:SoftwareRunAction",
      "@type": "rdfs:Class",
      "rdfs:comment": "The act of testing an object according to its specifications. For instance, testing a software with a particular testType using a specific testInput and getting a specific testOutput (aka result).",
      "rdfs:label": "SoftwareRunAction",
      "rdfs:subClassOf": {
        "@id": "schema:Action"
      }
    },
    {
      "@id": "maSMP:SoftwareSourceCode",
      "@type": "rdfs:Class",
      "rdfs:comment": "Extension of schema:SoftwareSourceCode adding properties corresponding to the Software Management Plan use case. For more information on SMPs see [ELIXIR Software Management Plan for Life Sciences](https://doi.org/10.37044/osf.io/k8znb). Properties have also been [mapped via crosswalks to other SMPs](https://doi.org/10.5281/zenodo.8087357). ",
      "rdfs:label": "SoftwareSourceCode",
      "rdfs:subClassOf": {
        "@id": "schema:SoftwareSourceCode"
      }
    },
    {
      "@id": "maSMP:TestAction",
      "@type": "rdfs:Class",
      "rdfs:comment": "The act of testing an object according to its specifications. For instance, testing a software with a particular testType using a specific testInput and getting a specific testOutput (aka result).",
      "rdfs:label": "TestAction",
      "rdfs:subClassOf": {
        "@id": "schema:Action"
      }
    },
    {
      "@id": "maSMP:developerDocumentation",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:CreativeWork"
      },
      "rdfs:comment": "Documentation about this software directed to developers who will use or reuse (e.g., extend) this software",
      "rdfs:label": "developerDocumentation"
    },
    {
      "@id": "maSMP:furtherDocumentation",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:CreativeWork"
      },
      "rdfs:comment": "Any other documentation corresponding to this software that is not better specified by other documentation related properties",
      "rdfs:label": "furtherDocumentation"
    },
    {
      "@id": "maSMP:learningResource",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:LearningResource"
      },
      "rdfs:comment": "Any [LearningResource](https://schema.org/LearningResource) that can provide orientation towards learning, education, skill acquisition, and other educational purposes about this research software.",
      "rdfs:label": "learningResource"
    },
    {
      "@id": "codemeta:referencePublication",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:ScholarlyArticle"
      },
      "rdfs:comment": "An academic publication related to the software. Property defined in the [Codemeta terms](https://codemeta.github.io/terms/).",
      "rdfs:label": "referencePublication"
    },
    {
      "@id": "maSMP:runContainer",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareRunAction"
      },
      "schema:rangeIncludes": {
        "@id": "schema:URL"
      },
      "rdfs:comment": "If the running was done using a container, such container should be pointed to here.",
      "rdfs:label": "runContainer"
    },
    {
      "@id": "maSMP:softwareRun",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareRunAction"
      },
      "schema:rangeIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "rdfs:comment": "Software executed by this running action.",
      "rdfs:label": "softwareRun",
      "text": "\n```{r, echo=FALSE, results='asis', message = FALSE}\nmy_apc %>% select(institution, euro) %>% \n  group_by(institution) %>% \n  ezsummary::ezsummary(n = TRUE, digits= 0, median = TRUE,\n                       extra = c(\n                         sum = \"sum(., na.rm = TRUE)\",\n                         min = \"min(., na.rm = TRUE)\",\n                         max = \"max(., na.rm = TRUE)\"\n                         )) %>%\n  mutate_all(format, big.mark=',') %>%\n  ezsummary::ezmarkup('...[. (.)]..[. - .]') %>%\n#> get rid of blanks\n  mutate(`mean (sd)` = gsub(\"\\\\(  \", \"(\", .$`mean (sd)`)) %>% \n  select(institution, n, sum, `mean (sd)`, median, `min - max`) %>%\n  arrange(desc(n)) %>%\n  knitr::kable(col.names = c(\"Institution\", \"Articles\", \"Spending total (in \u20ac)\", \"Mean (SD)\", \"Median\", \"Minimum - Maximum\"), align = c(\"l\",\"r\", \"r\", \"r\", \"r\", \"r\"))\n``` \n"
    },
    {
      "@id": "maSMP:softwareTested",
      "@type": "rdf:Property",
      "rdfs:comment": "Link to the software tested by this action.",
      "rdfs:label": "softwareTested",
      "schema:domainIncludes": {
        "@id": "maSMP:TestAction"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:SoftwareSourceCode"
        },
        {
          "@id": "schema:SoftwareApplication"
        }
      ]
    },
    {
      "@id": "maSMP:testInput",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:TestAction"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:Thing"
        },
        {
          "@id": "schema:ListItem"
        }
      ],
      "rdfs:comment": "Input used to performed the test. Some tests may not require any input, some may require multiple ones. If the order is important in the case of multiple inputs, a ListItem could help.",
      "rdfs:label": "testInput"
    },
    {
      "@id": "maSMP:testType",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:TestAction"
      },
      "schema:rangeIncludes": [
        {
          "@id": "schema:Text"
        },
        {
          "@id": "schema:URL"
        },
        {
          "@id": "schema:DefinedTerm"
        }
      ],
      "rdfs:comment": "The type of test that it is performed on the object.",
      "rdfs:label": "testType"
    },
    {
      "@id": "maSMP:testedWith",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "maSMP:TestAction"
      },
      "rdfs:comment": "Testing actions (e.g., continuous integration, end-to-end, etc.) performed on this software.",
      "rdfs:label": "testedWith"
    },
    {
      "@id": "maSMP:userDocumentation",
      "@type": "rdf:Property",
      "schema:domainIncludes": [
        {
          "@id": "maSMP:SoftwareSourceCode"
        },
        {
          "@id": "maSMP:SoftwareApplication"
        }
      ],
      "schema:rangeIncludes": {
        "@id": "schema:CreativeWork"
      },
      "rdfs:comment": "Documentation about this software directed to users who will use this software as it is.",
      "rdfs:label": "userDocumentation",
      "url": "https://github.com/MPDL/unibiAPC/wiki"
    },
    {
      "@id": "maSMP:versionControlSystem",
      "@type": "rdf:Property",
      "schema:domainIncludes": {
        "@id": "maSMP:SoftwareSourceCode"
      },
      "schema:rangeIncludes": {
        "@id": "schema:SoftwareApplication"
      },
      "rdfs:comment": "Version control system used for this source code, to keep track of all commits, branches and so.",
      "rdfs:label": "versionControlSystem",
      "url": "https://github.com"
    }
  ]
}